#!/usr/bin/env python3

import glob
import gpxpy
import gpxpy.gpx
import folium

# gpxfiles = [ 'test.gpx', 'test2.gpx' ]
gpxfiles = glob.glob('./activities/*.gpx')

# What years to filter
years = list(range(2012, 2020))
years.append(None)


def draw_file(osm_map, year, gpxfile):
    """
    Checks if gpx track is in time range (year or None)
    Iterates over all tracks, segments and points and adds
    points to maps object.
    :osm_map: map object
    :year: int or None
    :gpxfile: str
    returns: boolean
    """
    points = []
    xfile = open(gpxfile, 'r')
    gpx = gpxpy.parse(xfile)

    # check if file is from this year
    if gpx.tracks[0].segments[0].points[0].time.year != year and year is not None:
        return False

    # loop over tracks
    for track in gpx.tracks:
        for segment in track.segments:
            for point in segment.points:
                points.append(tuple([point.latitude, point.longitude]))

    xfile.close()

    # add line to map
    folium.PolyLine(points, color="red", weight=2.5, opacity=0.5).add_to(osm_map)
    return True


def draw_map(osm_map, files, year):
    """
    Iterates over all files in list and hand over to
    draw track of file to map
    :osm_map: map object
    :files: list of files
    :year: int or None
    :returns: boolean
    """
    for gpxfile in gpxfiles:
        draw_file(osm_map, year, gpxfile)

    return True

def main(years):
    """
    Loops over years and draws map
    :years: list
    :returns: boolean
    """

    for year in years:
        print("[+] Plotting {}".format(year))
        osm_map = folium.Map(zoom_start=14)
        draw_map(osm_map, files=gpxfiles, year=year)
        osm_map.save("./index.{}.html".format(year))
        print("[+] Wrote {} to ./index.{}.html".format(year, year))


if __name__ == '__main__':
    main(years)
